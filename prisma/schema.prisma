generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StaffRole {
  owner
  hr
  manager
  inventory
  orders
  viewer
}

enum BizRole {
  owner
  manager
  employee
}

model User {
  id                 String   @id @default(cuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  username           String   @unique
  displayName        String
  email              String?  @unique
  hashedPassword     String
  mustChangePassword Boolean  @default(false)
  stateId            String?
  mustAddStateId     Boolean  @default(true)
  staffRole          StaffRole?
  bizRole            BizRole?
  businessId         String?
  business           Business? @relation(fields: [businessId], references: [id])
  emailVerified      DateTime?
}

model Business {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  name        String   @unique
  discountPct Int      @default(0)
  users       User[]
  orders      Order[]
  preorders   Preorder[]
}

model Product {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  name          String
  description   String?
  publicPrice   Int
  businessPrice Int
  stock         Int      @default(0)
  image         String?
  cardSize      String?
  orderItems    OrderItem[]
  preorderItems PreorderItem[]
}

model Order {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  businessId   String
  business     Business @relation(fields: [businessId], references: [id])
  placedById   String
  placedBy     User     @relation(fields: [placedById], references: [id])
  delivery     String
  status       String
  total        Int
  pickupCode   String?
  items        OrderItem[]
  invoicePaid  Boolean  @default(false)
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  qty       Int
  unitPrice Int
}

model Preorder {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  businessId    String
  business      Business @relation(fields: [businessId], references: [id])
  requestedById String
  requestedBy   User     @relation(fields: [requestedById], references: [id])
  status        String   @default("pending")
  note          String?
  items         PreorderItem[]
}

model PreorderItem {
  id         String  @id @default(cuid())
  preorderId String
  preorder   Preorder @relation(fields: [preorderId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  qty        Int
}

model Application {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  inGameFullName  String
  contact         String
  phone           String?
  stateId         String?
  region          String
  about           String
  moreThan5Hours  Boolean
  status          String   @default("new")
}

model Settings {
  id           Int     @id @default(1)
  bgUrl        String?
  doNotBuyJson String?
  payoutPct    Int     @default(60)
  feePct       Int     @default(0)
  feeFlat      Int     @default(0)
}